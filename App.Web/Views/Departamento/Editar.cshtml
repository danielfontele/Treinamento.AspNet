@{
    ViewData["titulo"] = "Departamento";

    var idComponente = Guid.NewGuid().ToString("N");
    var modelParaOClientSide = new { habilite = true };
    
}

@model Departamento

<section id="@(idComponente)" class="painel app-views-departamento-editar">

    @using (Html.BeginForm("Salvar", "Departamento", FormMethod.Post))
    {
        <!-- Barra de botoes -->
        <nav>
            <a href="#" name="salvar">Salvar</a>

            @if (Model != null && Model.Codigo != 0)
            {
                @Html.ActionLink("Excluir", "Excluir", new { Model.Codigo } )
            }

            @Html.ActionLink("Cancelar e voltar", "Index")
        </nav>

        <!-- Titulo -->
        @Html.AppTitulo("Departamento")
        @*<div class="titulo-principal">Departamento</div>*@

        <!-- Codigo -->
        <div class="linha">
            <div class="coluna40 texto-alinhado-direita">
                @Html.LabelFor(x => x.Codigo)
            </div>
            <div class="coluna">
                @Html.HiddenFor(x => x.Codigo)
                @(Html.AppTextBox(x => x.Codigo)
                      .Habilite(false))
                @*@Html.TextBoxFor(x => x.Codigo, new { @name="id", disabled="disabled" } )*@
            </div>
        </div>

        <!-- Descrição -->
        <div class="linha">
            <div class="coluna40 texto-alinhado-direita">
                @Html.LabelFor(x => x.Descricao)
            </div>
            <div class="coluna">
                @Html.TextBoxFor(x => x.Descricao, new { @class="tamanho300", @autocomplete="off", @name="descricao"})
            </div>
        </div>
        
    }

</section>



@section Scripts{

<script>
    $(function() {
        app.carregueJavascript("/js/app.views.departamento.editar.js", {
            callback: function() {

                new app.views.departamento.editar($("#@(idComponente)"), @Html.Raw(Json.Serialize(modelParaOClientSide)) );
            }
        });
    })
</script>

}

